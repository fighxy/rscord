#!/bin/bash

echo "üõ†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ RSCORD"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo "1. üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."

# MongoDB
if ! systemctl is-active --quiet mongodb; then
    echo "‚ö†Ô∏è  MongoDB –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
    sudo systemctl start mongodb
    sudo systemctl enable mongodb
fi

# Redis
if ! systemctl is-active --quiet redis; then
    echo "‚ö†Ô∏è  Redis –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
    sudo systemctl start redis
    sudo systemctl enable redis
fi

# RabbitMQ
if ! systemctl is-active --quiet rabbitmq-server; then
    echo "‚ö†Ô∏è  RabbitMQ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
    sudo systemctl start rabbitmq-server
    sudo systemctl enable rabbitmq-server
fi

sleep 5

echo "2. üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é production.toml
sudo mkdir -p /opt/rscord/config

sudo tee /opt/rscord/config/production.toml > /dev/null << 'EOF'
[database]
mongodb_url = "mongodb://127.0.0.1:27017"
database_name = "rscord_prod"

[redis]
url = "redis://127.0.0.1:6379"

[rabbitmq]
url = "amqp://guest:guest@127.0.0.1:5672"

[server]
host = "0.0.0.0"

[jwt]
secret = "rscord-super-secret-jwt-key-for-production-env-2025"

[gateway]
port = 14700

[auth_service]
port = 14701

[chat_service]
port = 14702

[voice_service]
port = 14705
stun_servers = ["stun:stun.l.google.com:19302"]

[presence_service]
port = 14706

[livekit]
api_key = "devkey"
api_secret = "secret"
host = "127.0.0.1:7880"

[logging]
level = "info"
EOF

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
echo "3. üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
for bin in rscord-gateway rscord-auth-service rscord-voice-service rscord-presence-service; do
    if [ -f "/opt/rscord/bin/$bin" ]; then
        echo "‚úÖ $bin –Ω–∞–π–¥–µ–Ω"
        sudo chmod +x "/opt/rscord/bin/$bin"
    else
        echo "‚ùå $bin –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
echo "4. üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–∞–º..."

# MongoDB
echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º MongoDB..."
if timeout 5 mongosh --eval "db.adminCommand('ping')" > /dev/null 2>&1; then
    echo "‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ OK"
else
    echo "‚ùå MongoDB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# Redis
echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º Redis..."
if timeout 5 redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ OK"
else
    echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# RabbitMQ
echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º RabbitMQ..."
if timeout 5 rabbitmqctl status > /dev/null 2>&1; then
    echo "‚úÖ RabbitMQ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ OK"
else
    echo "‚ùå RabbitMQ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo "5. üöÄ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
sudo systemctl stop rscord-* 2>/dev/null

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ unit —Ñ–∞–π–ª—ã
sudo rm -f /etc/systemd/system/rscord-*.service

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ unit —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
create_service() {
    local service_name=$1
    local binary_name=$2
    local port=$3

    sudo tee /etc/systemd/system/${service_name}.service > /dev/null << EOF
[Unit]
Description=RSCORD ${service_name}
After=network-online.target mongodb.service redis.service rabbitmq-server.service
Wants=network-online.target
Requires=mongodb.service redis.service

[Service]
Type=simple
User=root
WorkingDirectory=/opt/rscord
ExecStart=/opt/rscord/bin/${binary_name}
Environment=RUST_LOG=debug
Environment=CONFIG_PATH=/opt/rscord/config/production.toml
Environment=RUST_BACKTRACE=1
Restart=on-failure
RestartSec=5
TimeoutStartSec=60
StandardOutput=journal
StandardError=journal
KillSignal=SIGINT
KillMode=mixed

[Install]
WantedBy=multi-user.target
EOF
    echo "‚úÖ –°–æ–∑–¥–∞–Ω —Å–µ—Ä–≤–∏—Å ${service_name}"
}

# –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
create_service "rscord-auth-service" "rscord-auth-service" "14701"
create_service "rscord-voice-service" "rscord-voice-service" "14705" 
create_service "rscord-presence-service" "rscord-presence-service" "14706"
create_service "rscord-gateway" "rscord-gateway" "14700"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
sudo systemctl daemon-reload

# –í–∫–ª—é—á–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "6. ‚öôÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

services=("rscord-auth-service" "rscord-voice-service" "rscord-presence-service" "rscord-gateway")

for service in "${services[@]}"; do
    sudo systemctl enable $service
    echo "–ó–∞–ø—É—Å–∫ $service..."
    sudo systemctl start $service
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if sudo systemctl is-active --quiet $service; then
        echo "‚úÖ $service –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå $service –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
        sudo journalctl -u $service -n 5 --no-pager
        echo "---"
    fi
done

echo ""
echo "7. üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞..."

echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
for service in "${services[@]}"; do
    status=$(sudo systemctl is-active $service 2>/dev/null || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω")
    echo "  $service: $status"
done

echo ""
echo "–ü–æ—Ä—Ç—ã:"
ss -tlnp | grep -E ":1470[0156]" | while read line; do
    echo "  $line"
done

echo ""
echo "üéØ –¢–µ—Å—Ç HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:"
for port in 14700 14701 14705 14706; do
    if timeout 3 bash -c "echo > /dev/tcp/127.0.0.1/$port" 2>/dev/null; then
        echo "  ‚úÖ localhost:$port - –æ—Ç–∫—Ä—ã—Ç"
    else
        echo "  ‚ùå localhost:$port - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
done

echo ""
echo "‚ú® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ test-backend.sh –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
