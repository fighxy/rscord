#!/bin/bash

# Radiate Secure Deployment Script
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º

set -euo pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üöÄ Radiate Secure Deployment Check"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏–∑ .env.production.example"
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
set -a
source .env
set +a

echo ""
echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
echo "----------------------------"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ JWT —Å–µ–∫—Ä–µ—Ç–∞
if [ -z "${JWT_SECRET:-}" ]; then
    error "JWT_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

if [ ${#JWT_SECRET} -lt 32 ]; then
    error "JWT_SECRET —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π! –ú–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
fi

if [ "$JWT_SECRET" == "default-jwt-secret-change-in-production" ]; then
    error "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π JWT_SECRET! –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å!"
fi

success "JWT —Å–µ–∫—Ä–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram —Ç–æ–∫–µ–Ω–∞
if [ -z "${TELEGRAM_BOT_TOKEN:-}" ]; then
    error "TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

if [[ ! "$TELEGRAM_BOT_TOKEN" =~ ^[0-9]+:[A-Za-z0-9_-]{35,}$ ]]; then
    error "TELEGRAM_BOT_TOKEN –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω –ª–∏ —Ç–æ–∫–µ–Ω
if grep -r "8485874967:AAHyf9abWYBwbTrlHFcY9RaP25IvRg8jbk8Use" ./servers > /dev/null 2>&1; then
    error "–ù–∞–π–¥–µ–Ω –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–Ω—ã–π Telegram —Ç–æ–∫–µ–Ω –≤ –∫–æ–¥–µ! –£–¥–∞–ª–∏—Ç–µ –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ!"
fi

success "Telegram –±–æ—Ç —Ç–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB
if [ -z "${MONGO_URI:-}" ]; then
    error "MONGO_URI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

if [[ "$MONGO_URI" == *"localhost"* ]] && [ "$NODE_ENV" == "production" ]; then
    warning "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è localhost –¥–ª—è MongoDB –≤ production!"
fi

if [[ "$MONGO_URI" != *"authSource"* ]]; then
    warning "MongoDB URI –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç authSource. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
fi

success "MongoDB –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if [ -z "${REDIS_URL:-}" ]; then
    error "REDIS_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

if [[ "$REDIS_URL" != *"redis://:*"* ]] && [ "$NODE_ENV" == "production" ]; then
    warning "Redis –Ω–µ –∑–∞—â–∏—â–µ–Ω –ø–∞—Ä–æ–ª–µ–º –≤ production!"
fi

success "Redis –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ LiveKit
if [ -z "${LIVEKIT_API_KEY:-}" ] || [ -z "${LIVEKIT_API_SECRET:-}" ]; then
    error "LiveKit API credentials –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
fi

if [ "$LIVEKIT_API_KEY" == "devkey" ] || [ "$LIVEKIT_API_SECRET" == "secret" ]; then
    error "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ LiveKit credentials! –≠—Ç–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ!"
fi

success "LiveKit –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ TLS/SSL
if [ "${USE_TLS:-false}" == "true" ]; then
    if [ ! -f "${TLS_CERT_PATH:-}" ] || [ ! -f "${TLS_KEY_PATH:-}" ]; then
        error "TLS –≤–∫–ª—é—á–µ–Ω, –Ω–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
    fi
    success "TLS/SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã"
else
    if [ "$NODE_ENV" == "production" ]; then
        warning "TLS –æ—Ç–∫–ª—é—á–µ–Ω –≤ production! –≠—Ç–æ —Å–µ—Ä—å–µ–∑–Ω–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å!"
    fi
fi

echo ""
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
echo "---------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi
success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! command -v docker-compose &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi
success "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx
if ! docker ps | grep -q nginx; then
    warning "Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo ""
echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
echo "---------------------"

check_port() {
    local port=$1
    local service=$2
    
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        success "–ü–æ—Ä—Ç $port ($service) –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        warning "–ü–æ—Ä—Ç $port ($service) –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
    fi
}

check_port 14701 "Auth Service"
check_port 14702 "Chat Service"
check_port 14703 "Telegram Bot"
check_port 14705 "Voice Service"
check_port 7880 "LiveKit"
check_port 6379 "Redis"
check_port 27017 "MongoDB"

echo ""
echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
echo "-----------------------------"

# –°–±–æ—Ä–∫–∞ Rust —Å–µ—Ä–≤–∏—Å–æ–≤
echo "–°–±–æ—Ä–∫–∞ backend —Å–µ—Ä–≤–∏—Å–æ–≤..."
cd servers
cargo build --release

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏
if [ $? -ne 0 ]; then
    error "–°–±–æ—Ä–∫–∞ Rust —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!"
fi
success "Backend —Å–µ—Ä–≤–∏—Å—ã —Å–æ–±—Ä–∞–Ω—ã"

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose
echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ —á–µ—Ä–µ–∑ Docker Compose..."
docker-compose -f ../docker-compose.production.yml up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
sleep 5
if [ $(docker ps -q | wc -l) -lt 5 ]; then
    warning "–ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
fi

echo ""
echo "üîç –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏..."
echo "------------------------"

# Health checks
check_health() {
    local url=$1
    local service=$2
    
    if curl -f -s "$url/health" > /dev/null 2>&1; then
        success "$service health check –ø—Ä–æ–π–¥–µ–Ω"
    else
        warning "$service health check –ø—Ä–æ–≤–∞–ª–µ–Ω"
    fi
}

check_health "http://localhost:14701" "Auth Service"
check_health "http://localhost:14702" "Chat Service"
check_health "http://localhost:14703" "Telegram Bot"
check_health "http://localhost:14705" "Voice Service"

echo ""
echo "=================================="
echo -e "${GREEN}üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs -f"
echo "  2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:9090 (Prometheus)"
echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏: http://localhost:14705/metrics"
echo "  4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ backup: ./backup.sh"
echo ""
echo "‚ö†Ô∏è  –í–∞–∂–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:"
echo "  - –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "  - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫"
echo "  - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup –ë–î"
echo "  - –í–∫–ª—é—á–∏—Ç–µ fail2ban –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –±—Ä—É—Ç—Ñ–æ—Ä—Å–∞"
echo ""
