#!/bin/bash

echo "üîß –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï RSCORD –°–ï–†–í–ï–†–ê"
echo "===================================="

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö RSCORD —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl stop rscord-* 2>/dev/null || true

echo "1. üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."

# –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
sudo apt update

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MongoDB
echo "Installing MongoDB..."
sudo apt install -y mongodb
sudo systemctl start mongodb
sudo systemctl enable mongodb

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Redis
echo "Installing Redis..."
sudo apt install -y redis-server
sudo systemctl start redis-server
sudo systemctl enable redis-server

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º RabbitMQ
echo "Installing RabbitMQ..."
sudo apt install -y rabbitmq-server
sudo systemctl start rabbitmq-server
sudo systemctl enable rabbitmq-server

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
sleep 10

echo "2. üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—É–¥–∞ –º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –±–∏–Ω–∞—Ä–Ω–∏–∫–∏
if [ -d "target/release" ]; then
    echo "–ù–∞–π–¥–µ–Ω target/release, –∫–æ–ø–∏—Ä—É–µ–º –±–∏–Ω–∞—Ä–Ω–∏–∫–∏..."
    sudo mkdir -p /opt/rscord/bin
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã
    for binary in rscord-gateway rscord-auth-service rscord-voice-service rscord-presence-service rscord-chat-service; do
        if [ -f "target/release/$binary" ]; then
            echo "–ö–æ–ø–∏—Ä—É–µ–º $binary..."
            sudo cp "target/release/$binary" "/opt/rscord/bin/"
            sudo chmod +x "/opt/rscord/bin/$binary"
            echo "‚úÖ $binary —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
        else
            echo "‚ùå $binary –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ target/release"
        fi
    done
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è target/release –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    echo "–ù—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç..."
    
    # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
    echo "üì¶ –ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞..."
    cd /root/rscord/servers
    cargo build --release
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
    cd /root/rscord
    sudo mkdir -p /opt/rscord/bin
    
    for binary in rscord-gateway rscord-auth-service rscord-voice-service rscord-presence-service rscord-chat-service; do
        if [ -f "target/release/$binary" ]; then
            echo "–ö–æ–ø–∏—Ä—É–µ–º $binary..."
            sudo cp "target/release/$binary" "/opt/rscord/bin/"
            sudo chmod +x "/opt/rscord/bin/$binary"
            echo "‚úÖ $binary —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
        fi
    done
fi

echo "3. üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

sudo mkdir -p /opt/rscord/config

sudo tee /opt/rscord/config/production.toml > /dev/null << 'EOF'
[database]
mongodb_url = "mongodb://127.0.0.1:27017"
database_name = "rscord_prod"

[redis]
url = "redis://127.0.0.1:6379"

[rabbitmq]
url = "amqp://guest:guest@127.0.0.1:5672"

[server]
host = "0.0.0.0"

[jwt]
secret = "rscord-super-secret-jwt-key-for-production-env-2025-very-long-and-secure"

[gateway]
port = 14700

[auth_service]
port = 14701

[chat_service]
port = 14702

[voice_service]
port = 14705
stun_servers = ["stun:stun.l.google.com:19302"]

[presence_service]
port = 14706

[livekit]
api_key = "devkey"
api_secret = "secret"
host = "127.0.0.1:7880"

[logging]
level = "info"
EOF

echo "4. üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö systemd unit —Ñ–∞–π–ª–æ–≤..."

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ
sudo rm -f /etc/systemd/system/rscord-*.service

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
create_service() {
    local service_name=$1
    local binary_name=$2

    sudo tee /etc/systemd/system/${service_name}.service > /dev/null << EOF
[Unit]
Description=RSCORD ${service_name}
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=root
WorkingDirectory=/opt/rscord
ExecStart=/opt/rscord/bin/${binary_name}
Environment=RUST_LOG=info
Environment=CONFIG_PATH=/opt/rscord/config/production.toml
Environment=RUST_BACKTRACE=1
Restart=on-failure
RestartSec=5
TimeoutStartSec=30
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF
    echo "‚úÖ –°–æ–∑–¥–∞–Ω —Å–µ—Ä–≤–∏—Å ${service_name}"
}

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
create_service "rscord-auth-service" "rscord-auth-service"
create_service "rscord-voice-service" "rscord-voice-service" 
create_service "rscord-presence-service" "rscord-presence-service"
create_service "rscord-gateway" "rscord-gateway"
create_service "rscord-chat-service" "rscord-chat-service"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
sudo systemctl daemon-reload

echo "5. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º MongoDB
if systemctl is-active --quiet mongodb; then
    echo "‚úÖ MongoDB —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå MongoDB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å..."
    sudo systemctl restart mongodb
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
if systemctl is-active --quiet redis-server; then
    echo "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Redis –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å..."
    sudo systemctl restart redis-server
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º RabbitMQ
if systemctl is-active --quiet rabbitmq-server; then
    echo "‚úÖ RabbitMQ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå RabbitMQ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å..."
    sudo systemctl restart rabbitmq-server
fi

echo "6. üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
ls -la /opt/rscord/bin/

echo "7. üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ –æ—á–µ—Ä–µ–¥–∏..."

services=("rscord-auth-service" "rscord-voice-service" "rscord-presence-service" "rscord-gateway")

for service in "${services[@]}"; do
    echo ""
    echo "–ó–∞–ø—É—Å–∫ $service..."
    sudo systemctl enable $service
    sudo systemctl start $service
    sleep 5
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if sudo systemctl is-active --quiet $service; then
        echo "‚úÖ $service –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
        case $service in
            rscord-gateway) port=14700 ;;
            rscord-auth-service) port=14701 ;;
            rscord-voice-service) port=14705 ;;
            rscord-presence-service) port=14706 ;;
        esac
        
        sleep 2
        if ss -tlnp | grep ":$port " > /dev/null; then
            echo "‚úÖ –ü–æ—Ä—Ç $port –æ—Ç–∫—Ä—ã—Ç"
        else
            echo "‚ö†Ô∏è  –ü–æ—Ä—Ç $port –ø–æ–∫–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
        fi
    else
        echo "‚ùå $service –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        echo "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫:"
        sudo journalctl -u $service -n 10 --no-pager
        echo "---"
    fi
done

echo ""
echo "8. üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞..."

echo "–°—Ç–∞—Ç—É—Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:"
for infra in mongodb redis-server rabbitmq-server; do
    if systemctl is-active --quiet $infra; then
        echo "  ‚úÖ $infra: active"
    else
        echo "  ‚ùå $infra: inactive"
    fi
done

echo ""
echo "–°—Ç–∞—Ç—É—Å RSCORD —Å–µ—Ä–≤–∏—Å–æ–≤:"
for service in "${services[@]}"; do
    status=$(sudo systemctl is-active $service 2>/dev/null || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω")
    if [ "$status" = "active" ]; then
        echo "  ‚úÖ $service: $status"
    else
        echo "  ‚ùå $service: $status"
    fi
done

echo ""
echo "–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:"
ss -tlnp | grep -E ":1470[0156]" | while read line; do
    echo "  $line"
done

echo ""
echo "üéØ –¢–µ—Å—Ç HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:"
for port in 14700 14701 14705 14706; do
    if timeout 3 bash -c "echo > /dev/tcp/127.0.0.1/$port" 2>/dev/null; then
        echo "  ‚úÖ localhost:$port - –æ—Ç–∫—Ä—ã—Ç"
    else
        echo "  ‚ùå localhost:$port - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
done

echo ""
echo "‚ú® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìç –°–µ—Ä–≤–∏—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "   Gateway: http://5.35.83.143:14700/health"
echo "   Auth: http://5.35.83.143:14701/health" 
echo "   Voice: http://5.35.83.143:14705/health"
echo "   Presence: http://5.35.83.143:14706/health"
echo ""
echo "üîç –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   sudo journalctl -u rscord-gateway -f"
echo "   sudo systemctl status rscord-gateway"
