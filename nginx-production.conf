# Production NGINX configuration for Radiate
# Server: 5.35.83.143

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/x-js text/x-cross-domain-policy application/x-font-ttf 
               application/x-font-opentype application/vnd.ms-fontobject 
               image/x-icon;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
    limit_conn_zone $binary_remote_addr zone=ws_limit:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Upstream services
    upstream gateway {
        least_conn;
        server 127.0.0.1:14710 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream auth {
        server 127.0.0.1:14701 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream chat {
        least_conn;
        server 127.0.0.1:14702 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream telegram_bot {
        server 127.0.0.1:14703 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream voice {
        least_conn;
        server 127.0.0.1:14705 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream presence {
        least_conn;
        server 127.0.0.1:14706 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream file_service {
        server 127.0.0.1:14707 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream signaling {
        least_conn;
        server 127.0.0.1:14708 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # LiveKit servers
    upstream livekit {
        server 127.0.0.1:7880 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream livekit_turn {
        server 127.0.0.1:5349 max_fails=3 fail_timeout=30s;
    }

    # Map for WebSocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Main HTTP server
    server {
        listen 80;
        listen [::]:80;
        server_name 5.35.83.143 radiate.app;

        # Redirect to HTTPS if enabled
        # return 301 https://$server_name$request_uri;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # CORS configuration
        set $cors_origin "*";
        if ($http_origin ~* (http://localhost:5173|tauri://localhost|https://radiate.app)) {
            set $cors_origin $http_origin;
        }
        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Session-ID' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,X-Session-ID' always;
        add_header 'Access-Control-Max-Age' '86400' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # ============ AUTH SERVICE ============
        location /api/auth {
            limit_req zone=auth_limit burst=5 nodelay;
            
            proxy_pass http://auth;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ============ GATEWAY SERVICE ============
        location /api {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Gateway WebSocket
        location /ws {
            limit_conn ws_limit 10;
            limit_conn perserver 100;
            
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering off;
            proxy_read_timeout 7d;
            proxy_send_timeout 7d;
            proxy_connect_timeout 7d;
        }

        # ============ CHAT SERVICE ============
        location /api/chat {
            limit_req zone=api_limit burst=30 nodelay;
            
            proxy_pass http://chat;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
        }

        # Chat WebSocket
        location /ws/chat {
            limit_conn ws_limit 5;
            
            proxy_pass http://chat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_buffering off;
            proxy_read_timeout 7d;
        }

        # ============ VOICE SERVICE (WebRTC Signaling) ============
        location /api/voice {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://voice;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Voice WebSocket for signaling
        location /ws/voice {
            limit_conn ws_limit 5;
            
            proxy_pass http://signaling;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_buffering off;
            proxy_read_timeout 7d;
        }

        # ============ LIVEKIT INTEGRATION ============
        # LiveKit WebSocket
        location /livekit {
            proxy_pass http://livekit;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering off;
            proxy_read_timeout 7d;
            proxy_send_timeout 7d;
        }

        # LiveKit TURN/STUN
        location /turn {
            proxy_pass http://livekit_turn;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # ============ PRESENCE SERVICE ============
        location /api/presence {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://presence;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Presence WebSocket
        location /ws/presence {
            limit_conn ws_limit 5;
            
            proxy_pass http://presence;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_buffering off;
            proxy_read_timeout 7d;
        }

        # ============ FILE SERVICE ============
        location /api/files {
            limit_req zone=api_limit burst=5 nodelay;
            client_max_body_size 100M;
            
            proxy_pass http://file_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_request_buffering off;
        }

        # ============ TELEGRAM BOT SERVICE ============
        location /api/telegram {
            limit_req zone=auth_limit burst=5 nodelay;
            
            proxy_pass http://telegram_bot;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ============ HEALTH CHECKS ============
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        location /api/health {
            access_log off;
            proxy_pass http://gateway/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # ============ STATIC FILES ============
        location /static {
            alias /var/www/radiate/static;
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Desktop app updates
        location /updates {
            alias /var/www/radiate/updates;
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # HTTPS server configuration (uncomment when SSL is ready)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name 5.35.83.143 radiate.app;

    #     # SSL configuration
    #     ssl_certificate /etc/letsencrypt/live/radiate.app/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/radiate.app/privkey.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;

    #     # Modern configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;

    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;

    #     # OCSP stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     ssl_trusted_certificate /etc/letsencrypt/live/radiate.app/chain.pem;

    #     # Include all location blocks from HTTP server
    # }

    # Status page for monitoring
    server {
        listen 127.0.0.1:8080;
        server_name localhost;

        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            deny all;
        }

        location /upstream_status {
            upstream_show;
            allow 127.0.0.1;
            deny all;
        }
    }
}

# TCP/UDP proxy for TURN server
stream {
    upstream turn_tcp {
        server 127.0.0.1:5349;
    }

    upstream turn_udp {
        server 127.0.0.1:5349;
    }

    # TURN TCP relay
    server {
        listen 3478;
        proxy_pass turn_tcp;
        proxy_connect_timeout 30s;
        proxy_timeout 600s;
    }

    # TURN UDP relay
    server {
        listen 3478 udp;
        proxy_pass turn_udp;
        proxy_timeout 600s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }
}
