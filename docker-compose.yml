version: "3.9"
services:
  # MongoDB - основная база данных
  mongo:
    image: mongo:7
    container_name: rscord-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=radiate
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - для кэширования и LiveKit
  redis:
    image: redis:7-alpine
    container_name: rscord-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ - для событий и очередей
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rscord-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO - для хранения файлов
  minio:
    image: minio/minio:latest
    container_name: rscord-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LiveKit - для WebRTC и голосовой связи
  livekit:
    image: livekit/livekit-server:latest
    container_name: rscord-livekit
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
    environment:
      - LIVEKIT_KEYS=devkey:devsecret
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7880/twirp/livekit.HealthService/HealthCheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Coturn - STUN/TURN server для WebRTC NAT traversal
  coturn:
    image: coturn/coturn:latest
    container_name: radiate-coturn
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./coturn/turnserver.conf:/etc/turnserver.conf:ro
    command: ["-c", "/etc/turnserver.conf"]
    environment:
      - TURN_USERNAME=radiate_user
      - TURN_PASSWORD=radiate_secure_password_2024
      - TURN_REALM=radiate.local

  # MailDev - для тестирования email (опционально)
  maildev:
    image: maildev/maildev:latest
    container_name: rscord-maildev
    ports:
      - "14080:1080"
      - "14025:1025"
    restart: unless-stopped

  # Auth Service - Radiate authentication service
  auth-service:
    build:
      context: ./servers/auth-service
      dockerfile: Dockerfile
    container_name: radiate-auth-service
    ports:
      - "14701:14701"
    environment:
      - MONGO_URI=mongodb://mongo:27017/radiate
      - JWT_SECRET=radiate-jwt-secret-production-change-this
      - BIND_ADDRESS=0.0.0.0
      - AUTH_PORT=14701
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - default

  # Telegram Bot Service - Radiate telegram bot
  telegram-bot:
    build:
      context: ./servers/telegram-bot-service
      dockerfile: Dockerfile
    container_name: radiate-telegram-bot
    environment:
      - BOT_TOKEN=8485874967:AAHyf9abWYBwbTrlHFcY9RaP25IvRg8jbk8
      - AUTH_SERVICE_URL=http://auth-service:14701
    depends_on:
      - auth-service
    restart: unless-stopped
    networks:
      - default

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  minio_data:
    driver: local

networks:
  default:
    name: rscord-network


